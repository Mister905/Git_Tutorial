List commits
git log --oneline

View code at a different commit (non-destructive)
git checkout <commit id>

Return to the master branch
git checkout master

Revert to code at a previous commit
git revert c35b31c
git add .
git commit -m "Reverted to a previous feature"
^ This is safe because we still have access to the commits that came after the
commit we are reverting to

Revert to code at a previous commit and discard subsequent changes (Destructive)
git reset c35b31c --hard


Create branches for new features
git branch unordered-list
git branch -a (the * indicates the active branch)
git checkout unordered-list
git add .
git commit -m "Added new <ul> feature"
git checkout master

Shortcut
git checkout -b unordered-list

Delete a branch
git branch -D unordered-list